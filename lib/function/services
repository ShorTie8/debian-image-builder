#!/bin/bash

# rc-local
rc-local_service(){
tee /etc/systemd/system/rc-local.service <<EOF
[Unit]
Description=/etc/rc.local
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
EOF

tee /etc/rc.local <<EOF
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

exit 0
EOF
chmod +x /etc/rc.local
}

# governor
governor_service(){
tee /etc/systemd/system/governor.service <<EOF
[Unit]
Description=Governor
ConditionPathExists=/sys/devices/system/cpu/online
After=rc-local.service

[Service]
ExecStart=/usr/local/bin/governor -r &>/dev/null
Type=oneshot
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
}

# pine64 bluetooth
pine64_bt_service(){
tee /etc/systemd/system/pine64-bthelper.service <<EOF
[Unit]
Description=Bluetooth Helper
ConditionPathExists=/usr/local/sbin/pine64-bthelper
After=network.target network-online.target ifup@.service
Before=bluetooth.service

[Service]
Type=forking
ExecStart=/usr/local/sbin/pine64-bthelper &>/dev/null

[Install]
WantedBy=multi-user.target
EOF
#systemctl enable pine64-bthelper
}

# nanopi bluetooth
nanopi_bt_service(){
tee /etc/systemd/system/nanopi-bthelper.service <<EOF
[Unit]
Description=Bluetooth Helper
After=network.target network-online.target ifup@.service
Before=bluetooth.service

[Service]
Type=oneshot
ExecStart=/usr/local/sbin/nanopi-bthelper -s
ExecStop=/usr/local/sbin/nanopi-bthelper -k
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
systemctl enable nanopi-bthelper
}

# leds
led_service(){
tee /etc/systemd/system/leds.service <<EOF
[Unit]
Description=LEDs
ConditionPathExists=/usr/local/sbin/led-trigger
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=rc-local.service

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/local/sbin/led-trigger &>/dev/null

[Install]
WantedBy=multi-user.target
EOF
systemctl enable leds
}

# tweaks
tweaks_service(){
cd ~
echo "overclock=0" > /etc/opt/overclock.txt
chmod +x /usr/bin/tweaks
chown root:root /usr/bin/tweaks
if [[ "$BOARD" == "odroidn2" || "$BOARD" == "odroidn2l" || "$BOARD" == "odroidn2plus" ]]; then
	mv -f irq-tweaks /usr/bin/irq-tweaks
	chmod +x /usr/bin/irq-tweaks
	chown root:root /usr/bin/irq-tweaks
fi

bananapi_systemd(){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=BPI Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=rc-local.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

lepotato_systemd(){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=Le Potato Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=network.target network-online.target ifup@.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

odroid_systemd(){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=ODROID Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=network.target network-online.target

[Service]
Type=forking
ExecStart=/usr/bin/tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks

if [[ "$BOARD" == "odroidn2" || "$BOARD" == "odroidn2l" || "$BOARD" == "odroidn2plus" ]]; then
	tee /etc/systemd/system/irq-tweaks.service <<EOF
[Unit]
Description=ODROID IRQ Tweaks
ConditionFileIsExecutable=/usr/bin/irq-tweaks
After=rc-local.service tweaks.service
Before=getty.target

[Service]
Type=simple
ExecStart=/usr/bin/irq-tweaks
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
	systemctl enable irq-tweaks
fi
}

rockchip_systemd(){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=Rockchip Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=network.target bluetooth.target rc-local.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

radxazero_systemd(){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=Radxa Zero Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target network.target bluetooth.target

[Service]
Type=forking
ExecStart=/usr/bin/tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

nanopi5_systemd(){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=NanoPi Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=network.target

[Service]
Type=forking
ExecStart=/usr/bin/tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

cubietruck_systemd(){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=Cubietruck Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=rc-local.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

cuboxi_systemd(){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=Cubox-i Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=rc-local.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

x96air_systemd(){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=X96-AIR Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=network.target network-online.target ifup@.service bluetooth.target leds.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

restart_tweaks(){
tee /usr/bin/restart-tweaks <<EOF
#!/bin/bash

service tweaks stop
sleep .50
service tweaks start

exit 0
EOF
chmod +x /usr/bin/restart-tweaks
}

if [[ "$DISTRO" == "devuan" ]]; then
	restart_tweaks
	mv -f tweaks.init /etc/init.d/tweaks
	chmod +x /etc/init.d/tweaks
	chown root:root /etc/init.d/tweaks
else
	if [[ "$BOARD" == "cubietruck" || "$BOARD" == "cuboxi" || "$BOARD" == "lepotato" || "$BOARD" == "radxazero" ]]; then
		${BOARD}_systemd;
	fi
	if [[ "$BOARD" == "nanopir5c" || "$BOARD" == "nanopir5s" ]]; then
		nanopi5_systemd;
	fi
	if [[ "$FAMILY_EXT" == "bananapi" || "$FAMILY_EXT" == "odroid" ]]; then
		${FAMILY_EXT}_systemd;
	fi
	if [[ "$FAMILY_EXT" == "rk3288" || "$FAMILY_EXT" == "rk3328" || "$FAMILY_EXT" == "rk3399" ]]; then
		rockchip_systemd;
	fi
fi
}

# credentials
credentials_service(){
tee /etc/systemd/system/credentials.service <<EOF
[Unit]
Description=Credentials
After=firstboot.service network.target systemd-remount-fs.service sysinit.target local-fs.target
Before=rc-local.service
ConditionPathExists=/usr/local/bin/credentials

[Service]
Type=oneshot
ExecStart=/usr/local/bin/credentials > /dev/null 2>&1
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
systemctl enable credentials
}

# first boot
firstboot_service(){
tee /etc/systemd/system/firstboot.service <<EOF
[Unit]
Description=Resize ROOTFS partition
After=systemd-remount-fs.service sysinit.target local-fs.target
ConditionPathExists=/usr/local/sbin/firstboot
DefaultDependencies=no

[Service]
ExecStart=/usr/local/sbin/firstboot
Type=oneshot
RemainAfterExit=no
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
}

# kali force start services
kali_tweaks(){
tee /etc/systemd/system/kali-tweaks.service <<EOF
[Unit]
Description=Kali Tweaks
After=rc-local.service
ConditionPathExists=/usr/local/sbin/kali-tweaks

[Service]
ExecStart=/usr/local/sbin/kali-tweaks > /dev/null 2>&1
Type=oneshot
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
systemctl enable kali-tweaks
}

enable_sysvinit(){
if [[ -f "/etc/init.d/tweaks" ]]; then
	chmod +x /etc/init.d/tweaks
	update-rc.d tweaks defaults 2
fi
if [[ -f "/usr/local/sbin/led-trigger" ]]; then
	chmod +x /etc/init.d/leds
	update-rc.d leds defaults 2
fi
if [[ "$BOARD" == "pinea64plus" || "$BOARD" == "nanopineoplus2" ]]; then
	chmod +x /etc/init.d/bthelper
	update-rc.d bthelper defaults 2
fi
if [ $NETWORKMANAGER -eq 0 ]; then
	chmod +x /etc/init.d/network
	update-rc.d -f networking remove
fi
chmod +x /etc/init.d/governor
chmod +x /etc/init.d/firstboot
chmod +x /etc/init.d/credentials
chmod +x /etc/init.d/zramswap
update-rc.d -f hwclock.sh remove
update-rc.d firstboot defaults S
update-rc.d governor defaults 2
update-rc.d zramswap defaults 2
update-rc.d credentials defaults 2
}

enable_systemd(){
systemctl enable rc-local
systemctl enable ifplugd
if [[ "$DISTRO" == "debian" || "$DISTRO" == "kali" ]]; then
	systemctl enable resolvconf
fi
systemctl enable zramswap
systemctl enable firstboot
systemctl enable governor
if [[ -f "/etc/systemd/system/multi-user.target.wants/ondemand.service" ]]; then
	systemctl disable ondemand
fi
#systemctl enable serial-getty@ttyUSB0.service
}
