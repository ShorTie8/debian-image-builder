#!/bin/bash

ARCH=`uname -m`

ubuntu-ccompile(){
sudo debconf-apt-progress -- apt install -y \
	build-essential bison bc git dialog patch dosfstools zip unzip qemu parted \
	debootstrap qemu-user-static rsync kmod cpio flex libssl-dev libncurses5-dev \
	device-tree-compiler libfdt-dev python3-distutils python3-dev swig fakeroot \
	lzop lz4 zstd aria2 pv crossbuild-essential-arm64 crossbuild-essential-armhf \
	distro-info-data lsb-release python2-dev python2 kpartx gcc-9 gcc-10 gcc-11 make \
	gcc-9-aarch64-linux-gnu gcc-10-aarch64-linux-gnu gcc-11-aarch64-linux-gnu \
	debian-archive-keyring debian-keyring python-setuptools python3-setuptools \
	python3-distutils-extra libelf-dev fdisk python-dev-is-python3 python2-minimal \
	dh-python 2to3 python-is-python3 gcc-12-aarch64-linux-gnu gcc-12 gcc-arm-none-eabi \
	gcc-9-arm-linux-gnueabihf gcc-10-arm-linux-gnueabihf gcc-11-arm-linux-gnueabihf nvme-cli \
	gcc-12-arm-linux-gnueabihf colorized-logs u-boot-tools gdisk jq wget btrfs-progs xfsprogs \
	gcc-9-arm-linux-gnueabi gcc-10-arm-linux-gnueabi gcc-11-arm-linux-gnueabi gcc-12-arm-linux-gnueabi \
	crossbuild-essential-armel python3-pyelftools
}

bullseye-ccompile(){
sudo debconf-apt-progress -- apt install -y \
	build-essential bison bc git dialog patch dosfstools zip unzip qemu parted \
	debootstrap qemu-user-static rsync kmod cpio flex libssl-dev libncurses5-dev \
	device-tree-compiler libfdt-dev python3-distutils python3-dev swig fakeroot \
	lzop lz4 aria2 pv crossbuild-essential-arm64 crossbuild-essential-armhf u-boot-tools \
	distro-info-data lsb-release libelf-dev fdisk kpartx ccache xz-utils gcc-9 gcc-10 \
	python-is-python2 python-dev-is-python2 zstd gcc-arm-none-eabi gcc-9-arm-linux-gnueabihf \
	gcc-9-aarch64-linux-gnu gcc-10-aarch64-linux-gnu gcc-10-arm-linux-gnueabihf jq nvme-cli \
	colorized-logs gdisk wget btrfs-progs xfsprogs gcc-9-arm-linux-gnueabi gcc-10-arm-linux-gnueabi \
	crossbuild-essential-armel python3-setuptools python3-pyelftools
}

if [[ "$ARCH" == "aarch64" ]]; then
	echo ""
	echo -e "You are running: $ARCH"
	echo -e "Please run: make ncompile"
	exit 0
fi

if [[ `grep -w "jammy" "/etc/os-release"` ]] || [[ `grep -w "kinetic" "/etc/os-release"` ]]; then
	echo ""
	ubuntu-ccompile
else
	if [[ `grep -w "bullseye" "/etc/os-release"` ]]; then
		echo ""
		bullseye-ccompile
	else
		echo ""
		echo -e "What OS are you running?"
		exit 0
	fi
fi
